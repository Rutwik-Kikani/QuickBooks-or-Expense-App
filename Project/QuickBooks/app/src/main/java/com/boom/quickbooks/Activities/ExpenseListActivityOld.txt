package com.boom.quickbooks.Activities;

import android.Manifest;
import android.app.Activity;
import android.content.Intent;
import android.content.pm.PackageManager;
import android.graphics.Paint;
import android.graphics.pdf.PdfDocument;
import android.os.Bundle;
import android.os.Environment;
import android.os.FileObserver;
import android.support.design.widget.FloatingActionButton;
import android.support.design.widget.Snackbar;
import android.support.v4.app.ActivityCompat;
import android.support.v7.app.AppCompatActivity;
import android.support.v7.widget.LinearLayoutManager;
import android.support.v7.widget.RecyclerView;
import android.support.v7.widget.Toolbar;
import android.text.SpannableStringBuilder;
import android.util.Log;
import android.view.View;
import android.widget.Toast;

import com.boom.quickbooks.Data.DumExpenseDataServer;
import com.boom.quickbooks.Data.ExpenseDbHandler;
import com.boom.quickbooks.Model.Expense;
import com.boom.quickbooks.R;
import com.boom.quickbooks.Ui.ExpenseRecyclerViewAdapter;

import java.io.File;
import java.io.FileOutputStream;
import java.util.ArrayList;
import java.util.List;

public class ExpenseListActivity extends AppCompatActivity {

    private static final String TAG = "ExpenseListActivity";
    private RecyclerView recyclerView;
    private RecyclerView.Adapter adapter;
    private List<Expense> mExList, listitems;
    private ExpenseDbHandler db ;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_expense_list);

        //get all expenses
        db = new ExpenseDbHandler(this);
        mExList = new ArrayList<>();
        mExList = db.getAllExpense();
        for(Expense e : mExList)
        {
            Log.d(TAG,e.toString());
        }

        Toolbar toolbar = findViewById(R.id.toolbar);
        setSupportActionBar(toolbar);

        FloatingActionButton fab = findViewById(R.id.fab);
//        FloatingActionButton fab_pdf = findViewById(R.id.fab_pdf);
        /*********************recyclerView stuff**********************/
//      primary setting
        recyclerView = (RecyclerView) findViewById(R.id.recyclerViewId);
        recyclerView.setHasFixedSize(true);
        recyclerView.setLayoutManager(new LinearLayoutManager(this));

//        get list to feed it is static list
//        mExList = new ArrayList<>();
//        mExList = DumExpenseDataServer.getExpenseList();

//       feed it to recycler view by adapter
        adapter = new ExpenseRecyclerViewAdapter(this,mExList);
        recyclerView.setAdapter(adapter);
        adapter.notifyDataSetChanged();

        fab.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                //Snackbar.make(view, "Replace with your own action", Snackbar.LENGTH_LONG)
                //      .setAction("Action", null).show();

                startActivity(new Intent(ExpenseListActivity.this,AddExpenseActivity.class));
                finish();
            }
        });

        //TODO : Write logic for dynamic pdf creating as list increase length of pdf increase;
//        fab_pdf.setOnClickListener(new View.OnClickListener() {
//            @Override
//            public void onClick(View v) {
//                ActivityCompat.requestPermissions(ExpenseListActivity.this,
//                        new String[]{Manifest.permission.READ_EXTERNAL_STORAGE,
//                        Manifest.permission.WRITE_EXTERNAL_STORAGE},
//                        PackageManager.PERMISSION_GRANTED);
//                //createPdf(v);
//            }
//        });

    }
//    public void createPdf(View view){
//        int count = mExList.size();
//
//        PdfDocument myPdfDocument = new PdfDocument();
//        PdfDocument.PageInfo myPageInfo = new PdfDocument.PageInfo.Builder(300*count,300*count,1).create();
//        PdfDocument.Page myPage = myPdfDocument.startPage(myPageInfo);
//
//
//        SpannableStringBuilder pExpenselist = new SpannableStringBuilder();
//
//        for (Expense e : mExList){
//            pExpenselist.append("Id : " + String.valueOf(e.getId())).append('\n');
//            pExpenselist.append("SubjectName : " + e.getSubName()).append('\n');
//            pExpenselist.append("CategoryName : "+e.getCategoryName()).append('\n');
//            pExpenselist.append("Date : "+e.getAddDate()).append('\n');
//            pExpenselist.append("Amount : "+e.getAmount()).append('\n');
//            pExpenselist.append("Description : "+e.getDescription()).append('\n');
//            pExpenselist.append('\n');
//        }
//        //Log.d(TAG,"String is "+pExpenselist);
//
//        Paint myPaint = new Paint();
//        int x = 10, y = 25;
//        for(String line : pExpenselist.toString().split("\n")){
//            myPage.getCanvas().drawText(line,x,y,myPaint);
//            y+=myPaint.descent() - myPaint.ascent();
//        }
//
//        //myPage.getCanvas().drawText(pExpenselist.toString(),x,y,myPaint);
//        myPdfDocument.finishPage(myPage);
//
//        String myFilePath = Environment.getExternalStorageDirectory().getPath()+"/myPDFFile1.pdf";
//        Log.d(TAG,myFilePath);
//        File myFile = new File(myFilePath);
//        try{
//                myPdfDocument.writeTo(new FileOutputStream(myFile));
//        }catch (Exception e){
//                e.printStackTrace();
//                Log.d(TAG,"ERROR");
//        }
//        myPdfDocument.close();
//    }

}
